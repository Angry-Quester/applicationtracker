<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-3.0.xsd
            http://www.springframework.org/schema/mvc
            http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

<!-- Loading of the application database properties -->
    <bean id="applicationProperties"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:application.properties" />
    </bean>

<!--Datasource -->
    <bean id="dataSource"
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName">
            <value>${db.driver}</value>
        </property>
        <property name="url">
            <value>${db.url}</value>
        </property>
        <property name="username">
            <value>${db.user}</value>
        </property>
        <property name="password">
            <value>${db.password}</value>
        </property>
    </bean>

<!-- Hibernate SessionFactory -->
    <bean id="sessionFactory"
        class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource">
            <ref local="dataSource" />
        </property>

        <property name="hibernateProperties">
            <value>
                hibernate.dialect=${hibernate.dialect}
                hibernate.show_sql=${hibernate.show_sql}
                hibernate.format_sql=${hibernate.format_sql}
                hibernate.hbm2ddl.auto=${hibernate.hbm2ddl.auto}
            </value>
        </property>

        <property name="mappingResources">
            <list>
                <value>edu/khai/applicationtracker/model/AppUser.hbm.xml</value>
                <value>edu/khai/applicationtracker/model/UserRole.hbm.xml</value>
                <value>edu/khai/applicationtracker/model/AppUserUserRole.hbm.xml</value>
                <value>edu/khai/applicationtracker/model/Application.hbm.xml</value>
                <value>edu/khai/applicationtracker/model/AppUserApplication.hbm.xml</value>
            </list>
        </property>
    </bean>

<!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <!-- I will use annotation driven transaction only when i need a non-standart method
    to become transactional-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- Non-invasive annotation driven transactional mechanism-->
    <aop:config>
        <aop:pointcut id="serviceMethods" expression="execution(* edu.khai.applicationtracker.service.*Manager.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethods"/>
    </aop:config>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="remove*" propagation="REQUIRED"/>
            <tx:method name="*" propagation="REQUIRED" read-only="true"/>
        </tx:attributes>
    </tx:advice>


<!-- DAOs-->
    <bean id="appUserDAO"
        class="edu.khai.applicationtracker.dao.hibernate.AppUserDAOHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <bean id="userRoleDAO"
        class="edu.khai.applicationtracker.dao.hibernate.UserRoleDAOHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <bean id="appUserUserRoleDAO"
        class="edu.khai.applicationtracker.dao.hibernate.AppUserUserRoleDAOHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <bean id="applicationDAO"
        class="edu.khai.applicationtracker.dao.hibernate.ApplicationDAOHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <bean id="appUserApplicationDAO"
        class="edu.khai.applicationtracker.dao.hibernate.AppUserApplicationDAOHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

</beans>
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

<!-- Loading of the application database properties -->
    <bean id="applicationProperties"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:application.properties" />
    </bean>

<!--Datasource (pooled version)-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close"
            p:driverClass="${db.driver}"
            p:jdbcUrl="${db.url}"
            p:user="${db.user}"
            p:password="${db.password}"
            p:acquireIncrement="5"
            p:idleConnectionTestPeriod="60"
            p:maxPoolSize="100"
            p:maxStatements="50"
            p:minPoolSize="10"
        />

<!-- Hibernate SessionFactory -->
    <bean id="sessionFactory"
        class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource">
            <ref local="dataSource" />
        </property>

        <property name="hibernateProperties">
            <value>
                hibernate.connection.useUnicode=${hibernate.connection.useUnicode}
                hibernate.connection.characterEncoding=${hibernate.connection.characterEncoding}
                hibernate.connection.charSet=${hibernate.connection.charSet}
                hibernate.dialect=${hibernate.dialect}
                hibernate.show_sql=${hibernate.show_sql}
                hibernate.format_sql=${hibernate.format_sql}
                hibernate.hbm2ddl.auto=${hibernate.hbm2ddl.auto}
            </value>
        </property>

        <property name="mappingResources">
            <list>
                <value>edu/khai/applicationtracker/model/AppUser.hbm.xml</value>
                <value>edu/khai/applicationtracker/model/UserRole.hbm.xml</value>
                <!-- All kinds of Applications -->
                <value>edu/khai/applicationtracker/model/Application.hbm.xml</value>
                    <!-- Application types -->
                    <value>edu/khai/applicationtracker/model/ApplicationType.hbm.xml</value>
                        <!-- Classes to describe Applications category -->
                        <value>edu/khai/applicationtracker/model/application/FixedRate.hbm.xml</value>
                        <value>edu/khai/applicationtracker/model/application/HourlyRate.hbm.xml</value>
                        <value>edu/khai/applicationtracker/model/application/NoRate.hbm.xml</value>
                    <!-- Contract Applications -->
                    <value>edu/khai/applicationtracker/model/application/ApplicationForm1.hbm.xml</value>
                    <value>edu/khai/applicationtracker/model/application/ApplicationForm11.hbm.xml</value>
                    <value>edu/khai/applicationtracker/model/application/ApplicationForm12.hbm.xml</value>
                    <value>edu/khai/applicationtracker/model/application/ApplicationForm13.hbm.xml</value>
                    <value>edu/khai/applicationtracker/model/application/ApplicationForm14.hbm.xml</value>
            </list>
        </property>
    </bean>

<!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- I will use annotation driven transactions only when i need a non-standart method
    to become transactional-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- Non-invasive annotation driven transactional mechanism-->
    <aop:config>
        <aop:pointcut id="serviceMethods" expression="execution(* edu.khai.applicationtracker.service.*Service.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethods"/>
    </aop:config>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="remove*" propagation="REQUIRED"/>
            <tx:method name="*" propagation="REQUIRED" read-only="true"/>
        </tx:attributes>
    </tx:advice>


<!--===========================DAOs=========================== -->
    <!--===========================AppUser DAOs=========================== -->
    <bean id="appUserDAO"
        class="edu.khai.applicationtracker.dao.hibernate.AppUserDAOHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <bean id="userRoleDAO"
        class="edu.khai.applicationtracker.dao.hibernate.UserRoleDAOHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <!--===========================Application DAOs=========================== -->
    <bean id="applicationDAO"
        class="edu.khai.applicationtracker.dao.hibernate.ApplicationDAOHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <bean id="applicationTypeDAO"
        class="edu.khai.applicationtracker.dao.hibernate.ApplicationTypeDAOHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <!--===========================Other DAOs=========================== -->
    <bean id="appUserApplicationDAO"
        class="edu.khai.applicationtracker.dao.hibernate.AppUserApplicationDAOHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>


</beans>